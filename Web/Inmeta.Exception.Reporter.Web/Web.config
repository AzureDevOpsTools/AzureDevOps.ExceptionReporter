<?xml version="1.0"?>

<!--
  For more information on how to configure your ASP.NET application, please visit
  http://go.microsoft.com/fwlink/?LinkId=152368
  -->

<configuration>
  <configSections>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net"/>
  </configSections>

  <appSettings>

    <!-- Defined if TFS shall be used as storage. For Exception Aggregation Service this property shall be set to false. -->
    <add key="UseTFS" value="false" />

    <!-- This limits the size on the local exception log file. If higher exceptions will not be logged and a Event error log will be created.  -->
    <add key="ExceptionFileSizeInMB" value="10" />

    <add key="WorkItemTrackingCacheRoot" value="C:\TFSCache"/>

    <!-- If set exceptions will be forwarded to this service. -->
    <add key="ServiceURL" value=""/>
  
  </appSettings>

  <!-- Default loggers -->
  <log4net>
    <appender name="EventLogAppender" type="log4net.Appender.EventLogAppender" >
      <applicationName value="Exception Reporter" />
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date [%thread] %-5level %logger [%property{NDC}] - %message%newline" />
      </layout>
    </appender>
    <root>
      <appender-ref ref="EventLogAppender"/>
      <level value="INFO" />
      <!--CHANGE TO WARN or ERROR if you want less logging-->
    </root>
  </log4net>

  <system.web>

    <compilation debug="true" targetFramework="4.0">
      <assemblies>
        <add assembly="System.Web.Abstractions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
        <add assembly="System.Web.Routing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
        <add assembly="System.Web.Mvc, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
        <add assembly="System.Data.Entity, Version=3.5.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"/>
      </assemblies>
    </compilation>

    <authentication mode="Windows"/>
    <!--identity impersonate="false" /-->
    
    <!-- Allow anon users to main site -->
    <!-- authorization>
      <allow users="?"/>
    </authorization -->
  
    <pages enableEventValidation="false" enableViewStateMac="false" controlRenderingCompatibilityVersion="3.5" clientIDMode="AutoID">
      <namespaces>
        <add namespace="System.Web.Mvc" />
        <add namespace="System.Web.Mvc.Ajax" />
        <add namespace="System.Web.Mvc.Html" />
        <add namespace="System.Web.Routing" />
      </namespaces>
    </pages>
  </system.web>

  <system.webServer>
    <validation validateIntegratedModeConfiguration="false"/>
    <modules runAllManagedModulesForAllRequests="true"/>
  </system.webServer>

  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0" newVersion="2.0.0.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>

  <!--system.serviceModel>
    <serviceHostingEnvironment multipleSiteBindingsEnabled="true" aspNetCompatibilityEnabled="true" />
    <services>
      <service name="Inmeta.Exception.Reporter.Web.ExceptionService.Exceptions" behaviorConfiguration="aaa">
        <endpoint address="" binding="wsHttpBinding" contract="Inmeta.Exception.Service.Common.Services.IGetExceptionsService"/>
      </service>
    </services>
    
    <behaviors>
      <serviceBehaviors>
        <behavior name="aaa">
          <serviceMetadata httpGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="false" />
        </behavior>
        
      </serviceBehaviors>
    </behaviors>
  </system.serviceModel-->
</configuration>

